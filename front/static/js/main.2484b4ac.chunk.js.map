{"version":3,"sources":["routes/Login.js","routes/SectionSelector.js","routes/Homepage.js","routes/Quiz.js","routes/Formular.js","routes/functionals/CustomAjaxRequest.js","routes/Header.js","routes/globals/LinkCall.js","routes/functionals/AppUrl.js","logo.svg","routes/functionals/ScrollToTop.js","routes/Referendum1.js","routes/Referendum2.js","routes/Faq.js","App.js","serviceWorker.js","index.js","routes/globals/ReferendumForm.js"],"names":["Login","props","_this","Object","C_Users_Ionut_Desktop_usr_vot_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_Ionut_Desktop_usr_vot_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_Ionut_Desktop_usr_vot_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","user","localStorage","getItem","JSON","parse","detalii_judet","detalii_sectie","fields","errors","classes","messages","openSnack","snackTheme","server_response_message","focused_fields","login_success","history","push","formIsValid","setState","self","login_phone","login_pin","CustomAjaxRequest","global","app_url","r","res","ok","error_label","setItem","stringify","field","e","target","value","preventDefault","handleValidation","ajaxValidation","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","src","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","variant","gutterBottom","container","onSubmit","handleSubmit","bind","autoComplete","error","id","label","textField","onChange","handleChange","fullWidth","onFocus","onBlur","type","autoCapitalize","password","progress","size","color","button","open","anchorOrigin","vertical","horizontal","maxSnack","autoHideDuration","onClose","snackbarClose","message","ContentProps","root","snackError","snackSuccess","_globals_LinkCall_js__WEBPACK_IMPORTED_MODULE_10__","Component","withStyles","theme","display","flexWrap","marginTop","& input","padding","background","margin","spacing","unit","SectionSelector","judete","sectii","detalii_sectie_aleasa_de_user","sectie_confirmata","sectii_by_judet","filter","sectie","judet_id","token","errorLabel","judet_selectat","judet","sectie_selectata","htmlFor","name","map","nr","_globals_LinkCall__WEBPACK_IMPORTED_MODULE_11__","Homepage","quiz_section","central_ls","local_ls","expanded_text","quiz_completat","formular_euro_completat","formular_ref1_completat","formular_ref2_completat","truncateText","C_Users_Ionut_Desktop_usr_vot_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","console","log","str","length","ending","substring","react__WEBPACK_IMPORTED_MODULE_6___default","_Header_js__WEBPACK_IMPORTED_MODULE_14__","pagename","_material_ui_core__WEBPACK_IMPORTED_MODULE_10__","component","Link","to","primary","href","formatReqString","arr","key","formatSendTags","and","i","Quiz","handleCancelSave","dialog_open","handleOkSave","qa","buildAnswerForRequest","quiz_params","question_id","answer_id","data_saved","setTimeout","removeItem","window","scrollTo","questions","answers","text","quiz_saved_message","questionId","answerId","upsertQa","indexOf","splice","answer_unchecked","nameKey","myArray","qa_local","_this2","state_qa","in","timeout","question","index","dangerouslySetInnerHTML","__html","position","content","answer","a_index","odd_even","active_answer","some","obj","onClick","handleAnswer","item","xs","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","confirmQuizSave","disableWindowBlurListener","form_fields","label_text","field_name","field_type","mandatory","Formular","dialog_message","form_has_been_submitted","focusTextField","allowed_fields","section","includes","updated_fields","replace","current","focus","fields_params","keys","formatReqStringOBJ","react__WEBPACK_IMPORTED_MODULE_7___default","_Header_js__WEBPACK_IMPORTED_MODULE_15__","_material_ui_core__WEBPACK_IMPORTED_MODULE_11__","disabled","C_Users_Ionut_Desktop_usr_vot_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_6__","withRouter","params","ajaxMethod","post_url","callback","Ajax","XMLHttpRequest","setRequestHeader","onreadystatechange","readyState","status","responseText","send","Header","observator","isLoggedIn","getVolunteer","getSelectedSection","getSelectedCounty","clear","_material_ui_core__WEBPACK_IMPORTED_MODULE_9__","alignItems","justify","sm","class","_material_ui_icons__WEBPACK_IMPORTED_MODULE_10__","logOut","React","menuButton","marginLeft","marginRight","headerRight","textAlign","logo","maxWidth","LinkCall","style","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","_material_ui_icons__WEBPACK_IMPORTED_MODULE_8__","custom_url_location","location","module","exports","__webpack_require__","p","ScrollToTop","prevProps","children","Referendum1","react_default","ReferendumForm","formNumber","Referendum2","ghid_text","Faq","classCallCheck","possibleConstructorReturn","getPrototypeOf","panel","event","expanded","index_es","expandIcon","icons_index_es","heading","width","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","createMuiTheme","palette","main","secondary","App","react_router_dom","functionals_ScrollToTop","styles","react_router","path","exact","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","parseInt","final_field_name"],"mappings":"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","file":"static/js/main.2484b4ac.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { TextField, Button, Typography, Snackbar, CircularProgress } from '@material-ui/core';\r\nimport AppUrl from './functionals/AppUrl';\r\nimport LinkCall from './globals/LinkCall.js'\r\nimport CustomAjaxRequest from './functionals/CustomAjaxRequest';\r\n//this.props.history.goBack();\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginTop: 0,\r\n        '& input': {\r\n            padding: '10px 5px',\r\n        },\r\n    },\r\n    button: {\r\n        marginTop: '20px',\r\n        padding: '15px 5px'\r\n    },\r\n    snackError: {\r\n        background: '#f00'\r\n    },\r\n    snackSuccess: {\r\n        background: '#002a59'\r\n    },\r\n    progress: {\r\n        margin: theme.spacing.unit * 2,\r\n      },\r\n\r\n});\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: localStorage.getItem('user') != null ? JSON.parse(localStorage.getItem('user')) : '',\r\n            detalii_judet: localStorage.getItem('detalii_judet') != null ? JSON.parse(localStorage.getItem('detalii_judet')) : '',\r\n            detalii_sectie: localStorage.getItem('detalii_sectie') != null ? JSON.parse(localStorage.getItem('detalii_sectie')) : '',\r\n            fields: {},\r\n            errors: {\r\n                classes: {},\r\n                messages: {}\r\n            },\r\n            openSnack: false,\r\n            snackTheme: 1,\r\n            server_response_message: '',\r\n            focused_fields: [],\r\n            login_success: false\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        if (this.state.user != '' && this.state.detalii_judet != '' && this.state.detalii_sectie != '') {\r\n            this.props.history.push('/homepage')\r\n        }\r\n    }\r\n    handleValidation() {\r\n        var fields = this.state.fields;\r\n        var errors = {\r\n            classes: {},\r\n            messages: {}\r\n        };\r\n        var formIsValid = true;\r\n        if (!fields['login_phone']) {\r\n            formIsValid = false;\r\n            errors['classes']['login_phone_error'] = 'custom_error';\r\n            errors['messages']['login_phone'] = 'Phone missing';\r\n            errors['login_phone'] = true;\r\n        }\r\n        if (!fields['login_pin']) {\r\n            formIsValid = false;\r\n            errors['classes']['login_pin_error'] = 'custom_error';\r\n            errors['messages']['login_pin'] = 'PIN missing';\r\n            errors['login_pin'] = true;\r\n        }\r\n        this.setState({\r\n            errors: errors\r\n        }, function() {});\r\n        return formIsValid;\r\n    }\r\n    ajaxValidation() {\r\n        var self = this;\r\n        var login_phone = this.state.fields.login_phone;\r\n        var login_pin = this.state.fields.login_pin;\r\n        if(this.state.login_success === false){\r\n            this.setState({login_success: true})\r\n            CustomAjaxRequest('phone=' + login_phone + '&pin=' + login_pin, 'POST', global.app_url + 'observer/login', function(r) {\r\n                var res = JSON.parse(r);\r\n                self.setState({\r\n                    openSnack: true,\r\n                })\r\n                if (res.ok === false) {\r\n                    self.setState({\r\n                        server_response_message: res.error_label,\r\n                        snackTheme: 1,\r\n                        login_success: false\r\n                    })\r\n                } else {\r\n                    localStorage.setItem('user', JSON.stringify(res))\r\n                    self.setState({\r\n                        server_response_message: \"Login cu succes. Redirect...\",\r\n                        snackTheme: 2\r\n                    }, function() {\r\n                        //setTimeout(function() {\r\n                            self.props.history.push('/section_selector')\r\n                            self.setState({\r\n                                login_success: false\r\n                            })\r\n                        //}, 2000)\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n    handleChange(field, e) {\r\n        var fields = this.state.fields;\r\n        fields[field] = e.target.value;\r\n        this.setState({\r\n            fields\r\n        });\r\n    }\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        if (this.handleValidation()) {\r\n            //success //redirect to homepage\r\n            this.ajaxValidation();\r\n        } else {\r\n            //alert(\"Form has errors.\")\r\n        }\r\n    }\r\n    snackbarClose() {\r\n        this.setState({ openSnack: false })\r\n    }\r\n    onFocus(field) {\r\n        var focused_fields = this.state.focused_fields;\r\n        focused_fields[field] = true\r\n        this.setState({\r\n            focused_fields\r\n        });\r\n    }\r\n    onBlur(field) {\r\n        var focused_fields = this.state.focused_fields;\r\n        focused_fields[field] = false\r\n        this.setState({\r\n            focused_fields\r\n        });\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        return ( \r\n        <div className = 'login' >\r\n            <img src = 'images/login_cover.jpg' />\r\n            <div className = 'page_inner' >\r\n            <Typography variant = \"h5\"\r\n            gutterBottom>\r\n            Reprezentant USR PLUS </Typography> \r\n            <form className = { classes.container }\r\n            onSubmit = { this.handleSubmit.bind(this) }\r\n            autoComplete = \"off\" >\r\n            <TextField error = { this.state.errors.login_phone }\r\n                id = \"standard-phone\"\r\n                label = \"Nr tel, ex. 0722123456\"\r\n                className = { classes.textField + \" \" + (this.state.focused_fields['login_phone'] == true ? ' expanded_input' : '') }\r\n                value = { this.state.login_phone }\r\n                onChange = { this.handleChange.bind(this, 'login_phone') }\r\n                fullWidth onFocus = { this.onFocus.bind(this, 'login_phone') }\r\n                onBlur = { this.onBlur.bind(this, 'login_phone') }\r\n                type='number'\r\n            /> \r\n            <TextField error = { this.state.errors.login_pin }\r\n                id = \"standard-pin\"\r\n                autoCapitalize='none'\r\n                label = \"COD\"\r\n                type = \"password\"\r\n                className = { classes.textField + \" \" + (this.state.focused_fields['login_pin'] == true ? ' expanded_input' : '') }\r\n                value = { this.state.password }\r\n                onChange = { this.handleChange.bind(this, 'login_pin') }\r\n                fullWidth onFocus = { this.onFocus.bind(this, 'login_pin') }\r\n                onBlur = { this.onBlur.bind(this, 'login_pin') }\r\n            /> \r\n            {this.state.login_success &&\r\n                <div className='global_progress_loader'>\r\n                    <CircularProgress className={classes.progress} size={35} />\r\n                </div>\r\n            }\r\n            <Button fullWidth variant = \"outlined\"\r\n            color = \"primary\"\r\n            type = \"submit\"\r\n            className = { classes.button + ' login_submit_button' } >\r\n            INTRĂ </Button> </form>\r\n\r\n            </div> \r\n            <Snackbar className='login_snackbar' open = { this.state.openSnack }\r\n                    anchorOrigin = {\r\n                        {\r\n                            vertical: 'bottom',\r\n                            horizontal: 'left',\r\n                        }\r\n                    }\r\n                    maxSnack = { 2 }\r\n                    autoHideDuration = { 3000 }\r\n                    onClose = { this.snackbarClose.bind(this) }\r\n                    message = { <span className='server_response_message'> { this.state.server_response_message } </span>}\r\n                        ContentProps = {\r\n                            {\r\n                                classes: {\r\n                                    root: this.state.snackTheme === 1 ? classes.snackError : classes.snackSuccess\r\n                                }\r\n                            }\r\n                        }\r\n            />\r\n                <LinkCall />\r\n                 </div>\r\n            );\r\n        }\r\n    }\r\n    Login.propTypes = {\r\n        classes: PropTypes.object.isRequired,\r\n    };\r\n\r\n\r\n    export default withStyles(styles)(Login);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from \"react-router-dom\";\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport {CircularProgress, DialogTitle, DialogActions, Dialog, Snackbar, TextField, Button, Typography, List, ListItem, ListItemText, ListItemLink, Divider, Grid, Paper, Select, MenuItem, FormControl, InputLabel  } from '@material-ui/core';\r\nimport AppUrl from './functionals/AppUrl';\r\nimport CustomAjaxRequest from './functionals/CustomAjaxRequest';\r\nimport LinkCall from './globals/LinkCall'\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    button: {\r\n        marginTop: '20px',\r\n        padding: '15px 5px'\r\n    },\r\n    snackError: {\r\n        background: '#f00'\r\n    },\r\n    snackSuccess: {\r\n        background: '#002a59'\r\n    }\r\n});\r\n\r\nclass SectionSelector extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            user: localStorage.getItem('user') != null ? JSON.parse(localStorage.getItem('user')) : '',\r\n            detalii_judet: localStorage.getItem('detalii_judet') != null ? JSON.parse(localStorage.getItem('detalii_judet')) : '',\r\n            detalii_sectie: localStorage.getItem('detalii_sectie') != null ? JSON.parse(localStorage.getItem('detalii_sectie')) : '',\r\n            judete: '',\r\n            sectii: false,\r\n            fields: {},\r\n            errors: {\r\n                classes: {},\r\n                messages: {}\r\n            },\r\n            openSnack: false,\r\n            snackTheme: 1,\r\n            server_response_message: '',\r\n            detalii_sectie_aleasa_de_user: '',\r\n            sectie_confirmata: false\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        if (this.state.user != '' && this.state.detalii_judet != '' && this.state.detalii_sectie != '') {\r\n            this.props.history.push('/homepage')\r\n        }else{\r\n            if(this.state.user){\r\n                this.setState({\r\n                    judete: this.state.user.judete,\r\n                }, function(){\r\n                    //console.log(this.state)\r\n                })\r\n            }else{\r\n                this.props.history.push('/')\r\n            }\r\n        }\r\n        \r\n    }\r\n    handleChange(field, e) {\r\n        var fields = this.state.fields;\r\n        fields[field] = e.target.value;\r\n\t\tvar errors = {\r\n\t\t\tclasses: {},\r\n\t\t\tmessages: {}\r\n        };\r\n        if(field === 'judet'){\r\n            var sectii_by_judet = this.state.user.sectii.filter(function(sectie){\r\n                return sectie.judet_id === e.target.value;         \r\n            });\r\n            this.setState({\r\n                sectii: sectii_by_judet\r\n            })\r\n        }\r\n        this.setState({\r\n            fields\r\n        });\r\n    }\r\n    handleValidation(){\r\n        var fields = this.state.fields;\r\n        var errors = {\r\n            classes: {},\r\n            messages: {}\r\n        };\r\n        var formIsValid = true;\r\n        if (!fields['judet']) {\r\n            formIsValid = false;\r\n            errors['classes']['judet_error'] = 'custom_error';\r\n            errors['messages']['judet'] = 'Judet missing';\r\n            errors['judet'] = true;\r\n        }\r\n        if (!fields['sectie']) {\r\n            formIsValid = false;\r\n            errors['classes']['sectie_error'] = 'custom_error';\r\n            errors['messages']['sectie'] = 'Sectie missing';\r\n            errors['sectie'] = true;\r\n        }\r\n        return formIsValid;\r\n    }\r\n    handleSubmit(e){\r\n        e.preventDefault();\r\n        var self = this;\r\n        if (this.handleValidation()) {\r\n            //success //redirect to homepage\r\n            //observer/section/select . \r\n            if(this.state.sectie_confirmata === false){\r\n                this.setState({sectie_confirmata: true})\r\n                CustomAjaxRequest('observer_id=' + this.state.user.id + '&token=' + this.state.user.token + '&section_id=' + this.state.fields.sectie, 'POST', global.app_url + 'observer/section/select', function(r) {\r\n                    var res = JSON.parse(r);\r\n                    self.setState({\r\n                        openSnack: true,\r\n                    })\r\n                    if (res.ok === false) {\r\n                        self.setState({\r\n                            server_response_message: res.errorLabel,\r\n                            snackTheme: 1,\r\n                            sectie_confirmata: false\r\n                        })\r\n                    } else {\r\n                        var judet_selectat = self.state.user.judete.filter(function(judet){\r\n                            return judet.id === self.state.fields.judet;         \r\n                        });\r\n                        var sectie_selectata = self.state.user.sectii.filter(function(sectie){\r\n                            return sectie.id === self.state.fields.sectie;         \r\n                        }); \r\n                        localStorage.setItem('detalii_sectie', JSON.stringify(sectie_selectata))\r\n                        localStorage.setItem('detalii_judet', JSON.stringify(judet_selectat))\r\n                        self.setState({\r\n                            server_response_message: \"Secție confirmată. Redirect...\",\r\n                            snackTheme: 2,\r\n                        }, function() {\r\n                            //setTimeout(function() {\r\n                                self.props.history.push('/homepage')\r\n                                self.setState({\r\n                                    sectie_confirmata: false\r\n                                })\r\n                            //}, 2000)\r\n                        })\r\n                    }\r\n                    //check for error messages and add condition\r\n                })\r\n            }\r\n        } else {\r\n            //console.log('missing fields')\r\n            //alert(\"Form has errors.\")\r\n        }\r\n    }\r\n    snackbarClose() {\r\n        this.setState({ openSnack: false })\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        var self = this\r\n        return (\r\n            <div className='section_selector'>\r\n                <img src = 'images/login_cover.jpg' />\r\n                <div className='page_inner'>\r\n                    <form className={classes.container} autoComplete=\"off\" onSubmit = { this.handleSubmit.bind(this) }>\r\n                            <FormControl fullWidth className='step2_fields custom_select_field'>\r\n                                <InputLabel htmlFor=\"judet\" className='select_label'>Județ</InputLabel>\r\n                                <Select\r\n                                    value={this.state.fields.judet || ''}\r\n                                    onChange={this.handleChange.bind(this, 'judet')}\r\n                                    name=\"judet\"\r\n                                    className='custom_select'\r\n                                >\r\n                                {this.state.judete &&\r\n                                    this.state.judete.map((judet) => {\r\n                                        return(\r\n                                            <MenuItem className='custom_select_option' value={judet.id}>{judet.name}</MenuItem>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                </Select>\r\n                            </FormControl>\r\n                            {this.state.sectii &&\r\n                                <FormControl fullWidth className='step2_fields custom_select_field'>\r\n                                    <InputLabel htmlFor=\"sectie\" className='select_label'>Secție</InputLabel>\r\n                                    <Select\r\n                                        value={this.state.fields.sectie || ''}\r\n                                        onChange={this.handleChange.bind(this, 'sectie')}\r\n                                        name=\"sectie\"\r\n                                        className='custom_select'\r\n                                    >\r\n                                    {this.state.sectii &&\r\n                                        this.state.sectii.map((sectie) => {\r\n                                            return(\r\n                                                <MenuItem className='custom_select_option' value={sectie.id}><strong>Nr. {sectie.nr}</strong>{' - ' + sectie.name}</MenuItem>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                    </Select>\r\n                                </FormControl>\r\n                            }\r\n                            {this.state.sectie_confirmata &&\r\n                                <div className='global_progress_loader'>\r\n                                    <CircularProgress className={classes.progress} size={35} />\r\n                                </div>\r\n                            }\r\n                            {this.state.fields['judet'] && this.state.fields['sectie'] ? (\r\n                                <Button fullWidth variant = \"outlined\"\r\n                                color = \"primary\"\r\n                                type = \"submit\"\r\n                                className = { classes.button + \" login_submit_button\" } >\r\n                                Continuă </Button>\r\n                            ) : ( '' )}\r\n                    </form>\r\n                    <LinkCall />\r\n\r\n                    <Snackbar open = { this.state.openSnack }\r\n                            anchorOrigin = {\r\n                                {\r\n                                    vertical: 'bottom',\r\n                                    horizontal: 'left',\r\n                                }\r\n                            }\r\n                            maxSnack = { 2 }\r\n                            autoHideDuration = { 3000 }\r\n                            onClose = { this.snackbarClose.bind(this) }\r\n                            message = { <span className='server_response_message'> { this.state.server_response_message } </span>}\r\n                                ContentProps = {\r\n                                    {\r\n                                        classes: {\r\n                                            root: this.state.snackTheme === 1 ? classes.snackError : classes.snackSuccess\r\n                                        }\r\n                                    }\r\n                                }\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nSectionSelector.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\nexport default withStyles(styles)(SectionSelector);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from \"react-router-dom\";\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport {AppBar, Toolbar, DialogTitle, DialogActions, Dialog, Snackbar, TextField, Button, Typography, List, ListItem, ListItemText, ListItemLink, Divider, Grid, Paper, Select, MenuItem, FormControl, InputLabel  } from '@material-ui/core';\r\nimport AppUrl from './functionals/AppUrl';\r\nimport CustomAjaxRequest from './functionals/CustomAjaxRequest';\r\nimport LinkCall from './globals/LinkCall'\r\nimport Header from './Header.js'\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    button: {\r\n        marginTop: '20px',\r\n        padding: '15px 5px'\r\n    },\r\n    snackError: {\r\n        background: '#f00'\r\n    },\r\n    snackSuccess: {\r\n        background: '#002a59'\r\n    }\r\n});\r\n\r\nclass Homepage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            user: localStorage.getItem('user') != null ? JSON.parse(localStorage.getItem('user')) : '',\r\n            quiz_section: localStorage.getItem('quiz') != null ? true : false,\r\n            central_ls: localStorage.getItem('central') != null ? JSON.parse(localStorage.getItem('central')) : '',\r\n            local_ls: localStorage.getItem('local') != null ? JSON.parse(localStorage.getItem('local')) : '',\r\n            expanded_text: [],\r\n            quiz_completat: localStorage.getItem('quiz_completat') != null ? true : false,\r\n            formular_euro_completat: localStorage.getItem('formular_europarlamentare_completat') != null ? true : false,\r\n            formular_ref1_completat: localStorage.getItem('formular_referendum_1_completat') != null ? true : false,\r\n            formular_ref2_completat: localStorage.getItem('formular_referendum_2_completat') != null ? true : false\r\n        }\r\n        this.truncateText = this.truncateText.bind(this)\r\n    }\r\n    componentDidMount(){\r\n        console.log('aici app url')\r\n        console.log(global.app_url)\r\n    }\r\n    truncateText(str, length, ending) {\r\n        if (length == null) {\r\n          length = 100;\r\n        }\r\n        if (ending == null) {\r\n          ending = '...';\r\n        }\r\n        if (str.length > length) {\r\n          return str.substring(0, length - ending.length) + ending;\r\n        } else {\r\n          return str;\r\n        }\r\n    }\r\n    expandText(field, e){\r\n        var expanded_text = this.state.expanded_text;\r\n        expanded_text[field] = !expanded_text[field];\r\n        this.setState({expanded_text})\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        var self = this\r\n        var final_central = this.state.central_ls.length > 0;\r\n        var final_local = this.state.local_ls.length > 0;\r\n        return (\r\n            <div className='section_selector'>\r\n                <Header user={this.state.user} history={this.props.history} pagename='homepage' />\r\n                <List component=\"nav\" id='menu'>\r\n                    <ListItem button className={this.state.quiz_completat ? 'list_item list_item_modified' : 'list_item'} component={Link} to='/quiz'>\r\n                        <ListItemText primary=\"CHESTIONAR\" />\r\n                    </ListItem>\r\n                    <Divider />\r\n                    <ListItem button className={this.state.formular_euro_completat ? 'list_item list_item_modified' : 'list_item'} component={Link} to='/formular'>\r\n                        <ListItemText primary=\"P.V. EUROPARLAMENTARE\" />\r\n                    </ListItem>\r\n                    <Divider />\r\n                    <ListItem button className={this.state.formular_ref1_completat ? 'list_item list_item_modified' : 'list_item'} component={Link} to='/referendum1'>\r\n                        <ListItemText primary=\"P.V. REFERENDUM ÎNTREB #1\" />\r\n                    </ListItem>\r\n                    <Divider />\r\n                    <ListItem button className={this.state.formular_ref2_completat ? 'list_item list_item_modified' : 'list_item'} component={Link} to='/referendum2'>\r\n                        <ListItemText primary=\"P.V. REFERENDUM ÎNTREB #2\" />\r\n                    </ListItem>\r\n                    <Divider />\r\n                    <ListItem button className='list_item' component='a' href='tel: 077'>\r\n                        <ListItemText primary=\"SUNĂ CALL CENTER JUDEȚEAN\" />\r\n                    </ListItem>\r\n                    <Divider />\r\n                    <ListItem button className='list_item' component='a' href='tel: 072'>\r\n                        <ListItemText primary=\"SUNĂ CALL CENTER NAȚIONAL\" />\r\n                    </ListItem>\r\n                    <Divider />\r\n                    <ListItem button className='list_item' component={Link} to='/faq'>\r\n                        <ListItemText primary=\"GHID\" />\r\n                    </ListItem>\r\n                    <Divider />\r\n                </List>\r\n                {/*<Grid container spacing={0} className='hp_two_col_top'>\r\n                    <Grid item xs={6}>\r\n                        <Paper className='two_col_menu hp_tc'  onClick={this.expandText.bind(this, 'central')}>\r\n                            <Grid container spacing={0}>\r\n                                <Grid item xs={4}>\r\n                                    <img src=\"images/icon_two_col.png\"></img>\r\n                                </Grid>\r\n                                <Grid item xs={8}>\r\n                                    Central\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container spacing={0}>\r\n                                <Grid item xs={12}>\r\n                                    <div className='excerpt central_local_excerpt'>\r\n                                        {final_central ? (\r\n                                            (this.state.expanded_text['central']) ? \r\n                                            (this.state.central_ls[0].content) : \r\n                                                (this.truncateText(this.state.central_ls[0].content, 25, '...'))\r\n                                            ) : ''\r\n                                        }\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Paper className='two_col_menu hp_tc' onClick={this.expandText.bind(this, 'local')}>\r\n                            <Grid container spacing={0}>\r\n                                <Grid item xs={4}>\r\n                                    <img src=\"images/icon_two_col.png\"></img>\r\n                                </Grid>\r\n                                <Grid item xs={8}>\r\n                                    Echipă\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container spacing={0}>\r\n                                <Grid item xs={12}>\r\n                                    <div className='excerpt central_local_excerpt'>\r\n                                        {final_local ? (\r\n                                            (this.state.expanded_text['local']) ? \r\n                                            (this.state.local_ls[0].content) : \r\n                                                (this.truncateText(this.state.local_ls[0].content, 25, '...'))\r\n                                            ) : ''\r\n                                        }\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>*/}\r\n                {/*<Grid container spacing={0}>\r\n                    <Grid item xs={4}>\r\n                        <Link to='/faq'>\r\n                            <Paper className='three_col_menu'>\r\n                                <img src=\"images/icon1.png\"></img>\r\n                            </Paper>\r\n                        </Link>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Link to='/raportare'>\r\n                            <Paper className='three_col_menu'>\r\n                                <img src=\"images/icon2.png\"></img>\r\n                            </Paper>\r\n                        </Link>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Link to='/statistici'>\r\n                            <Paper className='three_col_menu'>\r\n                                <img src=\"images/icon3.png\"></img>\r\n                            </Paper>\r\n                        </Link>\r\n                                    </Grid>\r\n                </Grid>*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nHomepage.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\nexport default withStyles(styles)(Homepage);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from \"react-router-dom\";\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport {Fade, AppBar, Toolbar, DialogTitle, DialogActions, Dialog, Snackbar, TextField, Button, Typography, List, ListItem, ListItemText, ListItemLink, Divider, Grid, Paper, Select, MenuItem, FormControl, InputLabel  } from '@material-ui/core';\r\nimport AppUrl from './functionals/AppUrl';\r\nimport CustomAjaxRequest from './functionals/CustomAjaxRequest';\r\nimport LinkCall from './globals/LinkCall'\r\nimport Header from './Header.js'\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    button: {\r\n        marginTop: '20px',\r\n        padding: '15px 5px'\r\n    },\r\n    snackError: {\r\n        background: '#f00'\r\n    },\r\n    snackSuccess: {\r\n        background: '#002a59'\r\n    }\r\n});\r\nfunction formatReqString(arr, key){\r\n    var formatSendTags = '';\r\n    var and = '';\r\n    for(var i = 0; i < arr.length; i++){\r\n        if(arr.length - 1 == i){\r\n            and = '';\r\n        }else{\r\n            and = '&';\r\n        }\r\n        formatSendTags += key + \"[]=\" + arr[i] + and;\r\n    }\r\n    return formatSendTags;\r\n}\r\nclass Quiz extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            user: localStorage.getItem('user') != null ? JSON.parse(localStorage.getItem('user')) : '',\r\n            questions: '',\r\n            answers: [{text: 'NU'}, {text: 'DA'}],\r\n            qa: localStorage.getItem('quiz') != null ? JSON.parse(localStorage.getItem('quiz')) : [],\r\n            dialog_open: false,\r\n            quiz_saved_message: false,\r\n            data_saved: false,\r\n            snackTheme: 1\r\n        }\r\n        this.buildAnswerForRequest = this.buildAnswerForRequest.bind(this)\r\n    }\r\n    componentDidMount(){\r\n        this.setState({\r\n            questions: this.state.user.questions\r\n        }, function(){\r\n        })\r\n    }\r\n    handleAnswer(questionId, answerId){\r\n        var qa = this.state.qa;\r\n        var self = this;\r\n        qa = this.upsertQa(qa, questionId, answerId);\r\n        this.setState({qa: qa}, function(){\r\n        });\r\n        localStorage.setItem('quiz', JSON.stringify(qa))\r\n    }\r\n    upsertQa(qa, questionId, answerId) {\r\n        for(var i = 0;i < qa.length;i++) {\r\n            //dar daca id-ul intrebarii din array si id-ul raspunsului din array sunt egale cu id-ul intrebarii curente si id-ul raspunsului curent scoate din array aceasta pereche si returneaza array nou\r\n            if(qa[i].questionId == questionId && qa[i].answerId == answerId){\r\n                var index = qa.indexOf(qa[i]);\r\n                if (index > -1) {\r\n                    qa.splice(i, 1);\r\n                }\r\n                this.setState({answer_unchecked: true})\r\n                return qa;\r\n            }\r\n            //daca id-ul intrebarii din array este egal cu cel al intrebarii curente, inlocuieste cheia answerId,\r\n            if (qa[i].questionId == questionId) {\r\n                qa[i].answerId = answerId;\r\n                return qa;\r\n            }\r\n        }\r\n        //nothing found, append the pair\r\n        this.setState({answer_unchecked: false})\r\n        qa.push({questionId: questionId, answerId: answerId});\r\n        return qa;\r\n    }\r\n    search(nameKey, myArray){\r\n        for (var i=0; i < myArray.length; i++) {\r\n            if (myArray[i].questionId === nameKey) {\r\n                return myArray[i];\r\n            }\r\n        }\r\n        return myArray[i];\r\n    }\r\n    confirmQuizSave(e){\r\n        e.preventDefault();\r\n        this.setState({dialog_open: true})\r\n    }\r\n    handleCancelSave = () => {\r\n        this.setState({\r\n            dialog_open: false\r\n        })\r\n    }\r\n    buildAnswerForRequest() {\r\n        var question_id = [];\r\n        var answer_id = [];\r\n        var qa_local = localStorage.getItem('quiz') != null ? JSON.parse(localStorage.getItem('quiz')) : null;\r\n\r\n        if(qa_local != null){\r\n            for (var i = 0;i < qa_local.length;i++) {\r\n                question_id.push(qa_local[i].questionId);\r\n                answer_id.push(qa_local[i].answerId == 0 ? 'nu' : 'da');\r\n            }\r\n            return {question_id: question_id, answer_id: answer_id}\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n    handleOkSave = () => {\r\n        //reset quiz ls and call \r\n        var self = this;\r\n        var qa = this.buildAnswerForRequest()\r\n        var quiz_params = qa ? (\"&\" + formatReqString(qa.question_id, 'question_id') + \"&\" + formatReqString(qa.answer_id, 'answer')) : ''\r\n        if(this.state.data_saved === false){\r\n            this.setState({\r\n                data_saved: true\r\n            })\r\n            CustomAjaxRequest('observer_id=' + this.state.user.id + '&token=' + this.state.user.token + quiz_params, 'POST', global.app_url + 'observer/quiz/answer', function(r) { \r\n                        var res = JSON.parse(r);\r\n                        self.setState({\r\n                            openSnack: true,\r\n                            dialog_open: false,\r\n                        })\r\n                        setTimeout(function(){\r\n                            self.setState({data_saved: false})\r\n                        }, 3000)\r\n                        if(res.ok === false){\r\n                            self.setState({\r\n                                server_response_message: res.errorLabel,\r\n                                snackTheme: 1,\r\n                            })\r\n                        }else{\r\n                            localStorage.removeItem('quiz')\r\n                            localStorage.setItem('quiz_completat', 'da')\r\n                            self.setState({\r\n                                server_response_message: \"Date salvate cu succes.\",\r\n                                snackTheme: 2,\r\n                                qa: []\r\n                            }, function(){\r\n                                window.scrollTo(0, 0)\r\n                            })\r\n                            \r\n                        }\r\n            })\r\n            \r\n        }\r\n    }\r\n    snackbarClose() {\r\n        this.setState({ openSnack: false })\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        var self = this\r\n        var state_qa = this.state.qa;\r\n        return (\r\n            <div className='section_selector'>\r\n                <Header user={this.state.user} history={this.props.history} pagename='Chestionar'/>\r\n                <Fade in={true} timeout={1000}>\r\n                    <div className='questions_wrapper page_inner'>\r\n                            {this.state.questions &&\r\n                                this.state.questions.map((question, index) => {\r\n                                    return (\r\n                                        <div className='question_wrap'>\r\n                                            <div className='question' dangerouslySetInnerHTML={{ __html: ((question.position != null) ? (question.position + 1) + '. ' + question.content : '') }}></div>\r\n                                            <Grid container spacing={0}>\r\n                                                {this.state.answers.map((answer, a_index) => {\r\n                                                    var odd_even = (a_index + 1) % 2 == 0 ? 'even_answer' : 'odd_answer'\r\n                                                    var active_answer = state_qa.some(function(obj){return obj.questionId == question.id && obj.answerId == a_index;}) \r\n                                                    return(\r\n                                                        <Grid onClick={this.handleAnswer.bind(this, question.id, a_index)} item xs={6} className={'q_answer_wrap ' + odd_even + (active_answer === true ? ' active_answer' : '')}>\r\n                                                            <Paper className='q_answer'>\r\n                                                                {answer.text}\r\n                                                            </Paper>\r\n                                                        </Grid>\r\n                                                    )\r\n                                                })}\r\n                                            </Grid>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                            <Grid container spacing={0} >\r\n                                <Grid item xs={12} className='center'>\r\n                                {this.state.qa.length > 0 &&\r\n                                    <Link className='custom_btn back_btn link_btn section_save_button' to='' onClick={this.confirmQuizSave.bind(this)}>FINALIZEAZĂ</Link>\r\n                                }\r\n                                </Grid>\r\n                            </Grid>\r\n                    </div>\r\n                </Fade>\r\n                <Dialog open={this.state.dialog_open}>\r\n                    <DialogTitle>Esti sigur ca vrei sa trimiti datele?</DialogTitle>\r\n                            <DialogActions>\r\n                                <Button onClick={this.handleCancelSave.bind(this)}>\r\n                                       NU\r\n                                </Button>\r\n                                <Button onClick={this.handleOkSave.bind(this)}>\r\n                                       DA\r\n                                </Button>\r\n                        </DialogActions>\r\n                </Dialog>\r\n                <Snackbar open = { this.state.openSnack }\r\n                        anchorOrigin = {\r\n                            {\r\n                                vertical: 'bottom',\r\n                                horizontal: 'left',\r\n                            }\r\n                        }\r\n                        maxSnack = { 2 }\r\n                        autoHideDuration = { 5000 }\r\n                        onClose = { this.snackbarClose.bind(this) }\r\n                        disableWindowBlurListener={false}\r\n                        message = { <span className='server_response_message'> { this.state.server_response_message } </span>}\r\n                            ContentProps = {\r\n                                {\r\n                                    classes: {\r\n                                        root: this.state.snackTheme === 1 ? classes.snackError : classes.snackSuccess\r\n                                    }\r\n                                }\r\n                            }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nQuiz.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\nexport default withStyles(styles)(Quiz);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport {Fade, AppBar, Toolbar, DialogTitle, DialogActions, Dialog, Snackbar, TextField, Button, Typography, List, ListItem, ListItemText, ListItemLink, Divider, Grid, Paper, Select, MenuItem, FormControl, InputLabel  } from '@material-ui/core';\r\nimport AppUrl from './functionals/AppUrl';\r\nimport CustomAjaxRequest from './functionals/CustomAjaxRequest';\r\nimport LinkCall from './globals/LinkCall'\r\nimport Header from './Header.js'\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    button: {\r\n        marginTop: '20px',\r\n        padding: '15px 5px'\r\n    },\r\n    snackError: {\r\n        background: '#f00'\r\n    },\r\n    snackSuccess: {\r\n        background: '#002a59'\r\n    },\r\n    textField: {\r\n        marginTop: 0,\r\n        '& input' :{\r\n            padding: '10px',\r\n        },\r\n    },\r\n    button: {\r\n        marginTop: '20px',\r\n        padding: '15px 5px'\r\n    },\r\n});\r\nconst form_fields = [{\r\n    label_text: 'Numărul total al alegătorilor înscriși în lista electorală permanentă și în copia de pe lista electorală specială (pct. a = pct. a1 + pct. a2), din care:',\r\n    field_name: 'a',\r\n    field_type: 'tel',\r\n    mandatory: false\r\n},{\r\n    label_text: 'Numărul total al alegătorilor înscriși în lista electorală permanentă (pct. a1 ≥ pct. b1)',\r\n    field_name: 'a1',\r\n    field_type: 'tel',\r\n    mandatory: false\r\n},{\r\n    label_text: 'Numărul total al alegătorilor înscriși în copia de pe lista electorală specială (pct. a2 ≥ pct. b2)',\r\n    field_name: 'a2',\r\n    field_type: 'tel',\r\n    mandatory: false\r\n},{\r\n    label_text: 'Numărul total al alegătorilor care s-au prezentat la urne, înscriși în listele electorale existente la secția de votare (pct. b = pct. b1 + pct. b2 + pct. b3), din care:',\r\n    field_name: 'b',\r\n    field_type: 'tel',\r\n    mandatory: false\r\n},{\r\n    label_text: 'Numărul total al alegătorilor înscriși în lista electorală permanentă, care s-au prezentat la urne',\r\n    field_name: 'b1',\r\n    field_type: 'tel',\r\n    mandatory: false\r\n},{\r\n    label_text: 'Numărul total al alegătorilor înscriși în copia de pe lista electorală specială, care s-au prezentat la urne',\r\n    field_name: 'b2',\r\n    field_type: 'tel',\r\n    mandatory: false\r\n},{\r\n    label_text: 'Numărul total al alegătorilor înscriși în lista electorală suplimentară, care s-au prezentat la urne',\r\n    field_name: 'b3',\r\n    field_type: 'tel',\r\n    mandatory: false\r\n},{\r\n    label_text: 'Numărul buletinelor de vot primite(pct. c ≥ pct. d + pct. e + pct. f)',\r\n    field_name: 'c',\r\n    field_type: 'tel',\r\n    mandatory: false\r\n},{\r\n    label_text: 'Numărul buletinelor de vot neîntrebuințate și anulate',\r\n    field_name: 'd',\r\n    field_type: 'tel',\r\n    mandatory: false\r\n},{\r\n    label_text: 'Numărul voturilor valabil exprimate(pct. e ≤ pct. b - pct. f) (pct. e = suma voturilor valabil exprimate la pct. g)',\r\n    field_name: 'e',\r\n    field_type: 'tel',\r\n    mandatory: false\r\n},{\r\n    label_text: 'Numărul voturilor nule\t',\r\n    field_name: 'f',\r\n    field_type: 'tel',\r\n    mandatory: false\r\n},{\r\n    label_text: 'Partidul Social Democrat',\r\n    field_name: 'psd_votes',\r\n    field_type: 'tel',\r\n    mandatory: true\r\n},{\r\n    label_text: 'Alianta electorala \"Alianta 2020 USR Plus\"',\r\n    field_name: 'usr_votes',\r\n    field_type: 'tel',\r\n    mandatory: true\r\n},{\r\n    label_text: 'Partidul PRO Romania',\r\n    field_name: 'proromania_votes',\r\n    field_type: 'tel',\r\n    mandatory: true\r\n},{\r\n    label_text: 'Uniunea Democrata Maghiara din Romania',\r\n    field_name: 'udmr_votes',\r\n    field_type: 'tel',\r\n    mandatory: true\r\n},{\r\n    label_text: 'Partidul National Liberal',\r\n    field_name: 'pnl_votes',\r\n    field_type: 'tel',\r\n    mandatory: true\r\n},{\r\n    label_text: 'Partidul Alianta Liberalilor si Democratilor - ALDE',\r\n    field_name: 'alde_votes',\r\n    field_type: 'tel',\r\n    mandatory: true\r\n},{\r\n    label_text: 'Partidul PRODEMO',\r\n    field_name: 'prodemo_votes',\r\n    field_type: 'tel',\r\n    mandatory: true\r\n},{\r\n    label_text: 'Partidul Miscarea Populara',\r\n    field_name: 'pmp_votes',\r\n    field_type: 'tel',\r\n    mandatory: true\r\n},{\r\n    label_text: 'Partidul Socialist Roman',\r\n    field_name: 'psr_votes',\r\n    field_type: 'tel',\r\n    mandatory: false\r\n},{\r\n    label_text: 'Partidul Social Democrat Independent',\r\n    field_name: 'psdi_votes',\r\n    field_type: 'tel',\r\n    mandatory: false\r\n},{\r\n    label_text: 'Partidul Romania Unita',\r\n    field_name: 'pru_votes',\r\n    field_type: 'tel',\r\n    mandatory: false\r\n},{\r\n    label_text: 'Uniunea Nationala pentru Progresul Romaniei',\r\n    field_name: 'unpr_votes',\r\n    field_type: 'tel',\r\n    mandatory: false\r\n},{\r\n    label_text: 'Blocul Unitatii Nationale BUN',\r\n    field_name: 'bun_votes',\r\n    field_type: 'tel',\r\n    mandatory: false\r\n},{\r\n    label_text: 'Gregoriana-Carmen Tudoran',\r\n    field_name: 'tudoran_votes',\r\n    field_type: 'tel',\r\n    mandatory: false\r\n},{\r\n    label_text: 'George-Nicolae Simion',\r\n    field_name: 'simion_votes',\r\n    field_type: 'tel',\r\n    mandatory: false\r\n},{\r\n    label_text: 'Peter Costea',\r\n    field_name: 'costea_votes',\r\n    field_type: 'tel',\r\n    mandatory: false\r\n}]\r\n\r\nfunction formatReqStringOBJ(obj){\r\n    var formatSendTags = '';\r\n    var and = '';\r\n    Object.keys(obj).map((key, i, arr) => {\r\n            if(Object.keys(obj).length - 1 == i){\r\n                and = '';\r\n            }else{\r\n                and = '&';\r\n            }\r\n            formatSendTags += key + \"=\" + obj[key] + and;\r\n    })\r\n    return formatSendTags;\r\n}\r\nclass Formular extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            user: localStorage.getItem('user') != null ? JSON.parse(localStorage.getItem('user')) : '',\r\n            fields: {},\r\n            errors: {\r\n                classes: {},\r\n                messages: {}\r\n            },\r\n            openSnack: false,\r\n            snackTheme: 1,\r\n            server_response_message: '',\r\n            dialog_open: false,\r\n            dialog_message: '',\r\n            focused_fields: [],\r\n            form_has_been_submitted: false,\r\n        }\r\n        this.textField = [];\r\n        this.focusTextField = this.focusTextField.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        var self = this;\r\n        //https://dev4.atelieru.ro/vot/observer/votes?observer_id=1&token=isjofcekaadvvlpaiecn\r\n        CustomAjaxRequest(global.app_url + 'observer/votes?observer_id=' + this.state.user.id + '&token=' + this.state.user.token, 'GET', '', function(r) {\r\n            var res = JSON.parse(r);\r\n            if(res.ok){\r\n                var allowed_fields = form_fields.map(function(field){\r\n                    return field.field_name\r\n                })\r\n                if(res.section){\r\n                    for(var key in res.section){\r\n                        if(allowed_fields.includes(key)){\r\n                            var updated_fields = self.state.fields\r\n                            updated_fields[key] = res.section[key] != null ? res.section[key] : 0\r\n                            self.setState({\r\n                                updated_fields\r\n                            })\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n    handleChange(field, e) {\r\n        var fields = this.state.fields;\r\n        fields[field] = e.target.value.replace(/\\D/g,'');;\r\n        \r\n\t\tvar errors = {\r\n\t\t\tclasses: {},\r\n\t\t\tmessages: {}\r\n\t\t};\r\n     \r\n        this.setState({\r\n            fields\r\n        }, function(){\r\n            //console.log(this.state)\r\n        });\r\n        //localStorage.setItem('formular', JSON.stringify(fields))\r\n    }\r\n    handleValidation(){\r\n        var fields = this.state.fields;\r\n        var errors = {\r\n            classes: {},\r\n            messages: {}\r\n        };\r\n        var formIsValid = true;\r\n        form_fields.map((field) => {\r\n            if(field.mandatory){\r\n                if (!fields[field.field_name]) {\r\n                    formIsValid = false;\r\n                    errors['classes'][field.field_name + '_error'] = 'custom_error';\r\n                    errors['messages'][field.field_name] = 'Camp obligatoriu';\r\n                    errors[field.field_name] = true;\r\n                }\r\n            }\r\n        })\r\n        this.setState({\r\n            errors: errors\r\n        }, function() {});\r\n        return formIsValid;\r\n    }\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        if (this.handleValidation()) {\r\n            //success //redirect to homepage\r\n            this.setState({\r\n                dialog_open: true\r\n            })\r\n        } else {\r\n            //alert(\"Form has errors.\")\r\n        }\r\n    }\r\n    snackbarClose(){\r\n        this.setState({openSnack: false})\r\n    }\r\n    onFocus(field){\r\n        var focused_fields = this.state.focused_fields;\r\n        focused_fields[field] = true\r\n        this.setState({\r\n            focused_fields\r\n        });\r\n    }\r\n    onBlur(field){\r\n        var focused_fields = this.state.focused_fields;\r\n        focused_fields[field] = false\r\n        this.setState({\r\n            focused_fields\r\n        });\r\n    }\r\n    focusTextField(field_name) {\r\n        // Explicitly focus the text input using the raw DOM API\r\n        // Note: we're accessing \"current\" to get the DOM node\r\n        this.textField[field_name].current.focus();\r\n    }\r\n    handleCancelSave = () => {\r\n        this.setState({\r\n            dialog_open: false\r\n        })\r\n    }\r\n    handleOkSave(){\r\n        var self = this;\r\n        var fields_params = formatReqStringOBJ(this.state.fields)\r\n        if (this.state.form_has_been_submitted === false) {\r\n            this.setState({form_has_been_submitted: true, dialog_open: false}, function(){\r\n                if(Object.keys(this.state.fields).length > 0){\r\n                    CustomAjaxRequest('observer_id=' + this.state.user.id + '&token=' + this.state.user.token + '&' + fields_params, 'POST', global.app_url + 'observer/add_section_count', function(r) {\r\n                        var res = JSON.parse(r);\r\n                        self.setState({\r\n                            openSnack: true,\r\n                            form_has_been_submitted: false\r\n                        })\r\n                        if (res.ok === false) {\r\n                            self.setState({\r\n                                server_response_message: res.errorLabel,\r\n                                snackTheme: 1\r\n                            })\r\n                        } else {\r\n                            //localStorage.setItem('user', JSON.stringify(res))\r\n                            localStorage.setItem('formular_europarlamentare_completat', 'da')\r\n                            self.setState({\r\n                                server_response_message: \"Datele au fost salvate.\",\r\n                                snackTheme: 2,\r\n                                //fields: {}\r\n                            }, function() {\r\n                                self.props.history.push('/homepage')\r\n                            })\r\n                        }\r\n                        //check for error messages and add condition\r\n                    })\r\n                }\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        var self = this\r\n        \r\n        return (\r\n            <div className='section_selector'>\r\n                <Header user={this.state.user} history={this.props.history} pagename='P.V. EUROPARLAMENTARE' />\r\n                <Fade in={true} timeout={1000}>\r\n                    <form className={classes.container} autoComplete=\"off\" onSubmit = { this.handleSubmit.bind(this) }>\r\n                            {form_fields.map((field, index) => {\r\n                                return(\r\n                                    <FormControl fullWidth className='form_control'>\r\n                                        <InputLabel htmlFor={field.field_name} className='form_control_label'><span className='mandatory_field'>{field.mandatory ? '*' : ''}</span>{index < 11 ? field.field_name + '. ' : ''}{field.label_text}</InputLabel>\r\n                                        <TextField\r\n                                            error={this.state.errors[field.field_name]}\r\n                                            className={classes.textField + \" \" + this.state.errors['classes'][field.field_name + '_error'] + ' custom_field' + \" \" + (this.state.focused_fields[field.field_name] == true ? ' expanded_input' : '')}\r\n                                            value={this.state.fields[field.field_name] || ''}\r\n                                            onChange={this.handleChange.bind(this, field.field_name)}\r\n                                            fullWidth\r\n                                            autoCapitalize='none'\r\n                                            type={field.field_type}\r\n                                            onFocus={this.onFocus.bind(this, field.field_name)}\r\n                                            onBlur={this.onBlur.bind(this, field.field_name)}\r\n                                        />\r\n                                    </FormControl>\r\n                                )\r\n                            })}\r\n                            \r\n                            <Grid container spacing={0}>\r\n                                <Grid item xs={12} className='multiple_buttons'>\r\n                                    <Button type='submit' className='custom_btn back_btn link_btn section_save_button' to=''>SALVEAZĂ</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                    </form>\r\n                </Fade>\r\n                <Snackbar open = { this.state.openSnack }\r\n                        anchorOrigin = {\r\n                            {\r\n                                vertical: 'bottom',\r\n                                horizontal: 'left',\r\n                            }\r\n                        }\r\n                        maxSnack = { 2 }\r\n                        autoHideDuration = { 3000 }\r\n                        onClose = { this.snackbarClose.bind(this) }\r\n                        message = { <span className='server_response_message'> { this.state.server_response_message } </span>}\r\n                            ContentProps = {\r\n                                {\r\n                                    classes: {\r\n                                        root: this.state.snackTheme === 1 ? classes.snackError : classes.snackSuccess\r\n                                    }\r\n                                }\r\n                            }\r\n                />\r\n                <Dialog open={this.state.dialog_open}>\r\n                    <DialogTitle>Esti sigur ca vrei sa trimiti datele?</DialogTitle>\r\n                            <DialogActions>\r\n                                <Button onClick={this.handleCancelSave.bind(this)}>\r\n                                       NU\r\n                                </Button>\r\n                                <Button disabled={this.state.form_has_been_submitted} onClick={this.handleOkSave.bind(this)}>\r\n                                       DA\r\n                                </Button>\r\n                        </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nFormular.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\nexport default withStyles(styles)(withRouter(Formular));","function CustomAjaxRequest(params, ajaxMethod, post_url, callback) {\r\n    var Ajax = new XMLHttpRequest();\r\n    if (ajaxMethod === 'POST') {\r\n        Ajax.open(ajaxMethod, post_url, true);\r\n        Ajax.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n    } else {\r\n        Ajax.open(ajaxMethod, params, true);\r\n    }\r\n\r\n    Ajax.onreadystatechange = function() {\r\n        if (Ajax.readyState === 4 && Ajax.status === 200) {\r\n            callback(Ajax.responseText);\r\n        }\r\n        if (Ajax.readyState !== 4 && Ajax.status !== 200) {\r\n            //CustomAlertMessage('Something went wrong. Please try again later.', 'custom_alert_box', 'Ok', '');\r\n        }\r\n        if (Ajax.status !== 200) {\r\n            //CustomAlertMessage('Something went wrong. Please try again later.', 'custom_alert_box', 'Ok', '');\r\n        }\r\n    };\r\n    if (ajaxMethod === 'POST') {\r\n        Ajax.send(params);\r\n    } else {\r\n        Ajax.send();\r\n    }\r\n}\r\n\r\nexport default CustomAjaxRequest;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from \"react-router-dom\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { IconButton, Grid, Button, Typography, Toolbar, AppBar, Paper, Divider } from '@material-ui/core';\r\nimport {MenuIcon, ExitToApp, ArrowBack} from '@material-ui/icons';\r\n\r\nconst styles = theme => ({\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n  headerRight: {\r\n      textAlign: 'right'\r\n  },\r\n  logo: {\r\n      maxWidth: '70px'\r\n  }\r\n});\r\n\r\nclass Header extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            observator: this.props.user,\r\n            detalii_judet: localStorage.getItem('detalii_judet') != null ? JSON.parse(localStorage.getItem('detalii_judet')) : '',\r\n            detalii_sectie: localStorage.getItem('detalii_sectie') != null ? JSON.parse(localStorage.getItem('detalii_sectie')) : '',\r\n            pagename: this.props.pagename\r\n        }\r\n        this.isLoggedIn = this.isLoggedIn.bind(this)\r\n        this.getVolunteer = this.getVolunteer.bind(this)\r\n        this.getSelectedSection = this.getSelectedSection.bind(this)\r\n        this.getSelectedCounty = this.getSelectedCounty.bind(this)\r\n    }\r\n    componentDidMount(){\r\n        console.log(this.state)\r\n        if (!this.isLoggedIn()) {\r\n            this.props.history.push('/');\r\n        } \r\n    }\r\n    isLoggedIn(){\r\n        if (this.getVolunteer() == null) {\r\n            return false;\r\n          }\r\n        if(this.getSelectedSection() == null){\r\n            return false;\r\n        }\r\n        if(this.getSelectedCounty() == null){\r\n            return false;\r\n        }\r\n          //s-ar putea sa aiba cheia expirata;\r\n          return true;\r\n    }\r\n    getVolunteer() {\r\n        return JSON.parse(localStorage.getItem(\"user\"));\r\n    }\r\n    getSelectedSection(){\r\n        return JSON.parse(localStorage.getItem('detalii_sectie'))\r\n    }\r\n    getSelectedCounty(){\r\n        return JSON.parse(localStorage.getItem('detalii_judet'))\r\n    }\r\n    logOut(){\r\n        localStorage.clear();\r\n        this.props.history.push('/')\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <AppBar position=\"static\" className='app_bar'>\r\n                        <Toolbar>\r\n                            {this.state.observator ? (\r\n                                <Grid container spacing={0} alignItems=\"center\" justify=\"center\">\r\n                                    <Grid item xs={10} sm={10} className='app_bar_col app_bar_left'>\r\n                                        <img class=\"app_logo\" src=\"images/logo.png\"></img>\r\n                                        {this.state.pagename === 'homepage' ? (\r\n                                            this.state.detalii_sectie &&\r\n                                                <strong>Secția {this.state.detalii_sectie[0].name} nr. {this.state.detalii_sectie[0].nr}, {this.state.detalii_judet[0].name}</strong>\r\n                                        ) : (\r\n                                            <strong className='section_title'>{this.state.pagename}</strong>\r\n                                        )}\r\n                                    </Grid>\r\n                                    <Grid item xs={2} sm={2} className='app_bar_col app_bar_right'>\r\n                                        {this.state.pagename === 'homepage' ? (\r\n                                            <ExitToApp className='logout_button' onClick={this.logOut.bind(this)} />\r\n                                        ) : (\r\n                                            <Link className='custom_btn back_btn' to='/homepage'><ArrowBack color='#012A59'/></Link>\r\n                                        )}\r\n                                    </Grid>\r\n                                </Grid>\r\n                            ) : ('')}\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                </div>\r\n                <Divider />\r\n            </div>\r\n        );\r\n    }   \r\n}\r\n\r\nHeader.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Header);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { IconButton, Grid, Button, Typography, Toolbar, AppBar, Paper, Divider } from '@material-ui/core';\r\nimport { Phone } from '@material-ui/icons';\r\n\r\nconst styles = theme => ({\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n  headerRight: {\r\n      textAlign: 'right'\r\n  },\r\n  logo: {\r\n      maxWidth: '70px'\r\n  }\r\n});\r\n\r\nclass LinkCall extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          \r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                <div style={{ padding: 20 }}>\r\n                    <Grid container alignItems=\"center\" justify=\"center\">\r\n                        <Grid item xs={12} sm={12} className='link_call'>\r\n                            <Phone className='phone_icon_issue' /> Dacă ai probleme la acces sună la: <a href=\"tel:+0722123456\" className=\"phone_number_issue global_anchor\">0722123456</a>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n                <Divider />\r\n            </div>\r\n        );\r\n    }   \r\n}\r\n\r\nLinkCall.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(LinkCall);","if (process.env.NODE_ENV === 'production') {\r\n    var custom_url_location = window.location.href\r\n    global.app_url = \"https://hailavot.herokuapp.com/dashboard/\";\r\n    if (custom_url_location.indexOf('dev5') !== -1) {\r\n        global.app_url = \"https://dev4.atelieru.ro/vot/\";\r\n    }\r\n    if (custom_url_location.indexOf('dev4') !== -1) {\r\n        global.app_url = \"https://dev4.atelieru.ro/vot-live/dashboard/\";\r\n    }\r\n} else {\r\n    global.app_url = \"https://dev4.atelieru.ro/vot/\";\r\n}","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, { Component } from 'react';\nimport { withRouter } from \"react-router-dom\";\nclass ScrollToTop extends Component {\n    componentDidUpdate(prevProps) {\n      if (this.props.location !== prevProps.location) {\n        window.scrollTo(0, 0)\n      }\n    }\n  \n    render() {\n      return this.props.children\n    }\n  }\n  \n  export default withRouter(ScrollToTop)","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from \"react-router-dom\";\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { AppBar, Toolbar, DialogTitle, DialogActions, Dialog, Snackbar, TextField, Button, Typography, List, ListItem, ListItemText, ListItemLink, Divider, Grid, Paper, Select, MenuItem, FormControl, InputLabel } from '@material-ui/core';\r\n\r\nimport ReferendumForm from './globals/ReferendumForm.js'\r\n\r\nclass Referendum1 extends Component {\r\n    render() {\r\n        return <ReferendumForm formNumber={1} />\r\n    }\r\n}\r\nexport default Referendum1;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from \"react-router-dom\";\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { AppBar, Toolbar, DialogTitle, DialogActions, Dialog, Snackbar, TextField, Button, Typography, List, ListItem, ListItemText, ListItemLink, Divider, Grid, Paper, Select, MenuItem, FormControl, InputLabel } from '@material-ui/core';\r\n\r\nimport ReferendumForm from './globals/ReferendumForm.js'\r\n\r\nclass Referendum2 extends Component {\r\n    render() {\r\n        return <ReferendumForm formNumber={2} />\r\n    }\r\n}\r\nexport default Referendum2;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from \"react-router-dom\";\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { Fade, ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, TextField, Button, Typography, List, ListItem, ListItemText, ListItemLink, Divider, Grid, Paper } from '@material-ui/core';\r\nimport Header from './Header'\r\nimport { Person, AccessAlarm, ArrowBack, Undo, LocationOn, ExpandMore } from '@material-ui/icons';\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginTop: 0,\r\n        '& input': {\r\n            padding: '10px 5px',\r\n        },\r\n    },\r\n    button: {\r\n        marginTop: '20px',\r\n        padding: '15px 5px'\r\n    },\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n});\r\n\r\nconst ghid_text = [{\r\n    question: 'Ce ar trebui să faceți în săptămâna de dinaintea votului (20-25 mai 2019)?',\r\n    answer: 'Luați legătura cu președintele de secție pentru a vă prezenta și a afla ora din preziua votării (25 mai 2019) la care e programată livrarea materialelor electorale la secție. Luați legătura cu coordonatorul județean USR/PLUS în caz că nu reușiți să contactați președintele secției.'\r\n},{\r\n    question: 'Ce trebuie să aveți la voi atunci când vă prezentați la secția de votare în care sunteți delegat?',\r\n    answer: 'Doar buletinul. Nu este necesară nicio împuternicire din partea USR-PLUS.'\r\n},{\r\n    question: 'Care este programul în preziua alegerilor, pe 25 mai 2019 (sâmbătă)?',\r\n    answer: 'Conform legii, trebuie să vă prezentați la secția de votare la ora <strong>18:00</strong>. Este bine să agreați cu președintele și cu ceilalți membri o oră de întâlnire pentru preluarea documentelor. Este important ca buletinele de vot și ștampilele ”VOTAT” <strong>să rămână sigilate până duminică dimineața</strong>. În intervalul orar 18:00-20:00 se primesc cererile de votare prin urna specială ale alegătorilor. Programul zile de sâmbătă este până la ora 20:00. Să vă asigurați la plecare că ați sigilat ore ușa și geamurile secției de votare cu benzi adezive ștampilate cu ștampila de control.'\r\n},{\r\n    question: 'La ce oră trebuie să vă prezentați la secția de votare în ziua alegerilor, pe 26 mai 2019 (duminică) și care este programul până la începerea votului?',\r\n    answer: 'Trebuie să vă prezentați la secția de votare la ora <strong>6:00</strong>. Este important să fiți odihnit, îmbrăcat și încălțat confortabil, să aveți la dumneavoastră apă, mâncare, încărcător de telefon/baterie externă. Trebuie să verificați inventarul buletinelor de vot, a ștampilelor și a documentelor în conformitate cu procesul verbal cu care au fost primite. Desigilarea pachetelor și aplicarea ștampilei de control pe verso se face în intervalul 6:00-7:00 dimineața. Notați numărul de pachete cu buletine de vot pentru fiecare tip de scrutin și al ștampilelor, pentru a verifica la final dacă buletinele utilizate împreună cu cele neutilizate însumează cifra corectă. Votul începe la ora 7:00.'\r\n},{\r\n    question: 'Care ar trebui să fie atitudinea dumneavoastră în secția de votare?',\r\n    answer: 'Activitatea dumneavoastră în secția de votare trebuie să fie corectă și imparțială, indiferent de preferințele politice. Este interzis să faceți campanie electorală și nu puteți purta niciun fel de articol de vestimentație pro/contra vreunui participant la procesul electoral. Trebuie să vă asigurați că orice material electoral din apropierea secției de votare este îndepărtat de către personalul care asigură paza. Este important să aveți o atitudine pozitivă, respectuoasă și de colaborare cu ceilalți membri ai Biroului Electoral, în spiritul desfășurării corecte a alegerilor.'\r\n},{\r\n    question: 'Cum ar trebui să procedați în cazul unor dispute/neînțelegeri în cadrul Biroului Electoral?',\r\n    answer: 'Solicitați președintelui consultarea Ghidului AEP, pentru lămuriri, în ideea că prevederile legale la Alegerile Europarlamentare și la referendum pot diferi față de alte tipuri de alegeri. În cazul în care decizia Biroului Electoral vă nemulțumește, puteți redacta o contestație. Este recomandabil să nu abuzați de contestarea excesivă pentru orice situație discutabilă și să vă rezumați doar la situații care afectează evident corectitudinea procesului de votare sau încălcări grave ale legii.'\r\n},{\r\n    question: 'Care sunt materialele electorale?',\r\n    answer: '<ul><li>Buletinul de vot este formularul pre-tipărit ce se înmânează alegătorilor;</li><li>Voturile sunt hârtiile care au ajuns în urna de votare;</li><li>Listele electorale sunt tabelele în care alegătorii semnează că au votat. Cele pre-tipărite sunt cele permanente sau speciale, iar cele ce se completează manual sunt cele suplimentare sau extrasul din lista pentru urna mobilă.</li><li>Ștampila de control este utilizată pentru ștampilarea buletinelor de vot (pe verso);</li><li>Ștampilele ”Votat” sunt utilizate de către cetățeni pentru a-și exprima opțiunea de vot pe buletinele de vot.</li><li>Urna de vot este locul în care ajung voturile cetățenilor.</li><li>Urna mobilă este urna utilizată pentru a colecta voturile cetățenilor care nu se pot deplasa la secția de votare și au cerut deplasarea urnei mobile în prealabil.</li></ul>'\r\n},{\r\n    question: 'Cine poate utiliza urna mobilă?',\r\n    answer: '<ul><li>Cetățenii care au solicitat în scris până în preziua votului la ora 20 (sâmbătă, 25 mai) prezența urnei mobile și care au atașat documentele medicale în acest sens.</li><li>Cetățenii din penitenciare care au dreptul de a vota și au făcut o solicitare scrisă în acest sens.</li><li>Cetățenii internați în unitățile medicale și care au făcut o solicitare scrisă în acest sens.</li></ul>'\r\n},{\r\n    question: 'Ce situații ar trebui să vă alerteze și pentru care ar trebui să apelați call-center-ul USR-PLUS?',\r\n    answer: '<ul><li>Probleme la desigilarea secției în ziua votului, lipsa unor materiale de vot, probleme cu sistemul informatic<li>Un număr foarte mare de cetățeni din afara localității care votează pe listele suplimentare. Puteți considera o limită de 5 cetățeni pe liste suplimentare la 100 de votanți de pe listele permanente.</li><li>Utilizarea excesivă a urnei mobile. Nu pot fi adăugați alți votanți față de cei înscriși până în preziua alegerilor pe lista celor ce solicită prezența urnei speciale. Nu este suficientă o listă trimisă de unitatea medicală/centrul de detenție, este necesară și o cerere individuală și scrisă în prealabil de fiecare persoană vizată.</li><li>Votanți care solicită prezența aceleiași/acelorași persoane cu ele în urnă. Doar cei aflați în situații speciale au dreptul să solicite prezența în cabina de vot a unei alte persoane.</li><li>Mai mult de un buletin de vot oferit de către ceilalți membri ai secției pentru fiecare dintre cele 3 categorii de buletine (europarlamentare, referendum 1, referendum 2).</li></ul>'\r\n},{\r\n    question: 'Ce sunt listele electorale și de câte tipuri sunt?',\r\n    answer: 'Listele electorale sunt tabelele de evidență a alegătorilor utilizate în secțiile de votare. <strong>Lista electorală permanentă</strong> cuprinde toți alegătorii români arondați la secția dumneavoastră de votare. <strong>Lista specială</strong> cuprinde cetățenii europeni cu reședința în localitatea dumneavoastră care au solicitat să voteze împreună cu cetățenii români. Alegătorii aflați în altă localitate decât cea în care sunt înscriși în lista electorală permanentă votează pe <strong>lista electorală suplimentară</strong>. Pe aceste liste suplimentare votează și membrii biroului electoral (inclusiv dumneavoastră dacă nu sunteți deja pe lista permanentă), operatorul informatic și personalul care asigura paza. În străinătate toți alegătorii votează pe listele suplimentare. Pentru alegătorii aflați în imposibilitate de deplasare se întocmește un extras din listele electorale pentru votarea cu urna specială. Acest extras se întocmește în prealabil și nu poate fi modificat de echipa care se deplasează cu urna mobilă. Există două seturi distincte pentru listele electorale: un set pentru Alegerile Europarlamentare și un set pentru Referendum.'\r\n},{\r\n    question: 'Cu ce act se poate vota?',\r\n    answer: 'În România se poate vota cu buletinul sau carte de identitate, pașaport diplomatic sau de serviciu. Pașaportul turistic simplu nu este admis decât pentru cetățenii români cu domiciliul în străinătate. Alegătorii comunitari votează pe listele speciale cu orice document eliberat de statul al cărui cetățean este.'\r\n},{\r\n    question: 'Cine poate asista în secțiile de votare în afară de membrii biroului electoral?',\r\n    answer: 'Candidații la alegeri, observatorii acreditați, reprezentanții mass-media acreditați, delegați ai formațiunilor politice care participă la alegeri și nu au reprezentanți în birourile electorale, pe bază de acreditare. Aceste persoane nu pot interveni în niciun mod în organizarea și desfășurarea alegerilor, având doar dreptul de a sesiza eventualele neregularități.'\r\n},{\r\n    question: 'Când este permisă părăsirea secției de vot?',\r\n    answer: '<ul><li>La deplasarea cu urna mobilă pentru persoanele netransportabile. Este de preferat să nu faceți parte din echipa de cel puțin două persoane care se deplasează cu urna mobilă.</li><li>Pauze la toaletă. Preferabil să fie cât mai rare și mai scurte, în perioare de acalmie (votanți puțini).</li></ul>'\r\n},{\r\n    question: 'Ce se întâmplă la finalul perioadei de votare?',\r\n    answer: 'Perioada de votare se încheie la ora 21:00. Pot vota și după ora 21:00 doar persoanele care se aflau deja în secția de votare la ora 21:00, în așteptarea buletinelor de vot. După închiderea votării, toate ștampilele ”VOTAT” trebuie sigilate în plicul special. Operatorul de calculator trebuie să pornească înregistrarea video a numărării votului. Trebuie verificate sigiliile de pe urnele de votare și sigilată fanta urnelor. Trebuie anulate buletinele de vot neutilizate și a pachetelor cu buletine de vot neutilizate prin scrierea cu pixul a cuvântului ”anulat” pe ele, inventarierea buletinelor de vot anulate.'\r\n},{\r\n    question: 'Cum se face numărarea votului?',\r\n    answer: 'Se determină numărul de participanți la vot pentru fiecare scrutin (de pe fiecare listă electorală în parte). Numărarea se face separat pentru europarmanentare și pentru fiecare întrebare a referendumului. Președintele sau locțiitorul lui va răsfoi fiecare vot, va citi opțiunea și o va arăta fiecărui membru și îl va așeza în teancul corespunzător. Fiecare membru își notează, utilizând formularul ajutător pentru numărare (linie cu pixul în dreptul respectivului candidat). Pe tot procesul de numărare este important ca buletinele de vot să fie la vedere și la dispoziția tuturor membrilor, pentru a se evita ștampilarea frauduloasă cu ștampile ilegale.'\r\n},{\r\n    question: 'Când este un vot valabil și când este nul?',\r\n    answer: 'De principiu, un vot este valabil când opțiunea alegătorului este clară. Nicio ștampilă aplicată sau o ștampila aplicată pe mai mulți candidați sau ștampila aplicată doar în afara zonelor dedicate candidaților transformă respectivul vot într-un vot nul. '\r\n},{\r\n    question: 'Ce se întâmplă la finalul procesului de numărare a votului?',\r\n    answer: 'Voturile nule și cele contestate vor fi îndosariate împreună cu procesele verbale de constatarea a rezultatelor și vor fi trimise și verificate de Biroul electoral județean sau de sector. Trebuie să solicitați o copie a proceselor verbale de constatare a rezultatelor.'\r\n},{\r\n    question: 'Cum faceți o contestație?',\r\n    answer: 'Constatarea unor nereguli și încălcări ale legii se face la președintele biroului de secție, printr-o întâmpinare/contestație în două exemplare (unul rămâne la dumneavoastră, semnat de luare la cunoștință de către președinte și cu număr de înregistrare). Dacă soluția dată de președinte nu vă este convenabilă, puteți face o contestație la Biroul Electoral Județean sau de Sector. Aceasta se poate transmite prin email, prin fotografierea documentului. În acest caz vă rugăm să anunțați call-center-ul USR-PLUS, pentru a urmări această contestație. Aveți un model de contestație în Ghidul delegatului în secția de votare, întocmit de USR-PLUS și atașat la finalul listei de întrebări-răspunsuri uzuale.'\r\n}]\r\n\r\nclass Faq extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: localStorage.getItem('user') != null ? JSON.parse(localStorage.getItem('user')) : '',\r\n            expanded: 'panel1',\r\n        }\r\n    }\r\n    componentDidMount() {\r\n    }\r\n    handleChange = panel => (event, expanded) => {\r\n        this.setState({\r\n            expanded: expanded ? panel : false,\r\n        });\r\n    };\r\n    render() {\r\n        const { expanded } = this.state;\r\n        const { classes } = this.props;\r\n        var self = this\r\n        return (\r\n            <div className=''>\r\n                <Header user={this.state.user} history={this.props.history} pagename='GHID'/>\r\n                \r\n                    {ghid_text.map(function(text, index){\r\n                        return (\r\n                            <Fade in={true} timeout={1000}>\r\n                                <ExpansionPanel expanded={expanded === ('panel' + (index + 1))} onChange={self.handleChange('panel' + (index + 1))}>\r\n                                    <ExpansionPanelSummary expandIcon={<ExpandMore />}>\r\n                                        <Typography className={classes.heading + ' ghid_question'}>{text.question}</Typography>\r\n                                    </ExpansionPanelSummary>\r\n                                    <ExpansionPanelDetails>\r\n                                        <Typography className='ghid_text' dangerouslySetInnerHTML={{ __html: text.answer }}></Typography>\r\n                                    </ExpansionPanelDetails>\r\n                                </ExpansionPanel>\r\n                            </Fade>\r\n                        )\r\n                    })}\r\n                \r\n                <div style={{textAlign: 'center', padding: '0 20px'}}>\r\n                    <a className='custom_btn back_btn link_btn section_save_button' href='https://www.usrplus.ro/ghid' target='_blank'>Ghid USR-PLUS</a>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nFaq.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\nexport default withStyles(styles)(Faq);","import React, { Component } from 'react';\r\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport createHistory from 'history/createBrowserHistory'\r\nimport Login from './routes/Login.js'\r\nimport logo from './logo.svg';\r\nimport 'typeface-roboto';\r\nimport './App.css';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport ScrollToTop from './routes/functionals/ScrollToTop'\r\nimport SectionSelector from './routes/SectionSelector.js'\r\nimport Homepage from './routes/Homepage.js'\r\nimport Quiz from './routes/Quiz'\r\nimport Formular from './routes/Formular'\r\nimport Referendum1 from './routes/Referendum1'\r\nimport Referendum2 from './routes/Referendum2'\r\nimport Faq from './routes/Faq'\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#002a59',\r\n    },\r\n    secondary: {\r\n      main: '#002a59',\r\n    },\r\n  },\r\n});\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <ScrollToTop>\r\n          <MuiThemeProvider theme = { theme }>\r\n            <div className='page_center'>\r\n              <Route path=\"/\" exact component={Login} />\r\n              <Route path=\"/section_selector\" component={SectionSelector} />\r\n              <Route path=\"/homepage\" component={Homepage} />\r\n              <Route path=\"/quiz\" component={Quiz} />\r\n              <Route path=\"/formular\" component={Formular} />\r\n              <Route path=\"/referendum1\" component={Referendum1} />\r\n              <Route path=\"/referendum2\" component={Referendum2} />\r\n              <Route path=\"/faq\" component={Faq} />\r\n            </div>\r\n          </MuiThemeProvider>\r\n        </ScrollToTop>\r\n    </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport {Fade, AppBar, Toolbar, DialogTitle, DialogActions, Dialog, Snackbar, TextField, Button, Typography, List, ListItem, ListItemText, ListItemLink, Divider, Grid, Paper, Select, MenuItem, FormControl, InputLabel  } from '@material-ui/core';\r\nimport AppUrl from './../functionals/AppUrl';\r\nimport CustomAjaxRequest from './../functionals/CustomAjaxRequest';\r\nimport LinkCall from './LinkCall.js'\r\nimport Header from './../Header.js'\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    button: {\r\n        marginTop: '20px',\r\n        padding: '15px 5px'\r\n    },\r\n    snackError: {\r\n        background: '#f00'\r\n    },\r\n    snackSuccess: {\r\n        background: '#002a59'\r\n    },\r\n    textField: {\r\n        marginTop: 0,\r\n        '& input' :{\r\n            padding: '10px',\r\n        },\r\n    },\r\n    button: {\r\n        marginTop: '20px',\r\n        padding: '15px 5px'\r\n    },\r\n});\r\n\r\nconst form_fields = [{\r\n    label_text: 'Numărul persoanelor înscrise în lista pentru referendum',\r\n    field_type: 'tel',\r\n    mandatory: false\r\n},{\r\n    label_text: 'Numărul participanţilor *)',\r\n    field_type: 'tel',\r\n    mandatory: true\r\n},{\r\n    label_text: 'Numărul de buletine de vot primite pentru a fi întrebuinţate',\r\n    field_type: 'tel',\r\n    mandatory: false\r\n},{\r\n    label_text: 'Numărul de buletine de vot rămase neîntrebuinţate',\r\n    field_type: 'tel',\r\n    mandatory: false\r\n},{\r\n    label_text: 'Numărul voturilor valabil exprimate la răspunsul \"DA\"',\r\n    field_type: 'tel',\r\n    mandatory: true\r\n},{\r\n    label_text: 'Numărul voturilor valabil exprimate la răspunsul \"NU\"',\r\n    field_type: 'tel',\r\n    mandatory: true\r\n},{\r\n    label_text: 'Numărul voturilor nule',\r\n    field_type: 'tel',\r\n    mandatory: false\r\n},{\r\n    label_text: 'Numărul voturilor contestate',\r\n    field_type: 'tel',\r\n    mandatory: false\r\n},{\r\n    label_text: 'Numărul întâmpinărilor şi contestaţiilor primite',\r\n    field_type: 'tel',\r\n    mandatory: false\r\n},{\r\n    label_text: 'Numărul întâmpinărilor şi contestaţiilor soluţionate',\r\n    field_type: 'tel',\r\n    mandatory: false\r\n},{\r\n    label_text: 'Numărul întâmpinărilor şi contestaţiilor înaintate biroului electoral de circumscripţie',\r\n    field_type: 'tel',\r\n    mandatory: false\r\n}]\r\n\r\nfunction formatReqStringOBJ(obj){\r\n    var formatSendTags = '';\r\n    var and = '';\r\n    Object.keys(obj).map((key, i, arr) => {\r\n            if(Object.keys(obj).length - 1 == i){\r\n                and = '';\r\n            }else{\r\n                and = '&';\r\n            }\r\n            formatSendTags += key + \"=\" + obj[key] + and;\r\n    })\r\n    return formatSendTags;\r\n}\r\nclass ReferendumForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            user: localStorage.getItem('user') != null ? JSON.parse(localStorage.getItem('user')) : '',\r\n            fields: {},\r\n            errors: {\r\n                classes: {},\r\n                messages: {}\r\n            },\r\n            openSnack: false,\r\n            snackTheme: 1,\r\n            server_response_message: '',\r\n            dialog_open: false,\r\n            dialog_message: '',\r\n            focused_fields: [],\r\n            form_has_been_submitted: false,\r\n            formNumber: this.props.formNumber ? this.props.formNumber : ''\r\n        }\r\n        this.textField = [];\r\n        this.focusTextField = this.focusTextField.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        var self = this\r\n        var allowed_fields = []\r\n        for(var key in form_fields){\r\n            allowed_fields.push('ref' + this.state.formNumber + '_' + (parseInt(key) + 1))\r\n        }\r\n        CustomAjaxRequest(global.app_url + 'observer/votes?observer_id=' + this.state.user.id + '&token=' + this.state.user.token, 'GET', '', function(r) {\r\n            var res = JSON.parse(r);\r\n            if(res.ok){\r\n                if(res.section){\r\n                    for(var key in res.section){\r\n                        if(allowed_fields.includes(key)){\r\n                            var updated_fields = self.state.fields\r\n                            updated_fields[key] = res.section[key] != null ? res.section[key] : 0\r\n                            self.setState({\r\n                                updated_fields\r\n                            })\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n    handleChange(field, e) {\r\n        var fields = this.state.fields;\r\n        fields[field] = e.target.value.replace(/\\D/g,'');;\r\n        \r\n\t\tvar errors = {\r\n\t\t\tclasses: {},\r\n\t\t\tmessages: {}\r\n\t\t};\r\n     \r\n        this.setState({\r\n            fields\r\n        });\r\n        //localStorage.setItem('formular', JSON.stringify(fields))\r\n    }\r\n    handleValidation(){\r\n        var fields = this.state.fields;\r\n        var errors = {\r\n            classes: {},\r\n            messages: {}\r\n        };\r\n        var formIsValid = true;\r\n        var self = this;\r\n        form_fields.map((field, index) => {\r\n            if(field.mandatory){\r\n                var final_field_name = 'ref' + self.state.formNumber + '_' + (index + 1);\r\n                if (!fields[final_field_name]) {\r\n                    formIsValid = false;\r\n                    errors['classes'][final_field_name + '_error'] = 'custom_error';\r\n                    errors['messages'][final_field_name] = 'Camp obligatoriu';\r\n                    errors[final_field_name] = true;\r\n                }\r\n            }\r\n        })\r\n        this.setState({\r\n            errors: errors\r\n        }, function() {});\r\n        return formIsValid;\r\n    }\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        if (this.handleValidation()) {\r\n            //success //redirect to homepage\r\n            this.setState({\r\n                dialog_open: true\r\n            })\r\n        } else {\r\n            //alert(\"Form has errors.\")\r\n        }\r\n    }\r\n    snackbarClose(){\r\n        this.setState({openSnack: false})\r\n    }\r\n    onFocus(field){\r\n        var focused_fields = this.state.focused_fields;\r\n        focused_fields[field] = true\r\n        this.setState({\r\n            focused_fields\r\n        });\r\n    }\r\n    onBlur(field){\r\n        var focused_fields = this.state.focused_fields;\r\n        focused_fields[field] = false\r\n        this.setState({\r\n            focused_fields\r\n        });\r\n    }\r\n    focusTextField(field_name) {\r\n        // Explicitly focus the text input using the raw DOM API\r\n        // Note: we're accessing \"current\" to get the DOM node\r\n        this.textField[field_name].current.focus();\r\n    }\r\n    handleCancelSave = () => {\r\n        this.setState({\r\n            dialog_open: false\r\n        })\r\n    }\r\n    handleOkSave = () => {\r\n        var self = this;\r\n        var fields_params = formatReqStringOBJ(this.state.fields)\r\n        if (this.state.form_has_been_submitted === false) {\r\n            this.setState({form_has_been_submitted: true, dialog_open: false}, function(){\r\n                if(Object.keys(this.state.fields).length > 0){\r\n                    CustomAjaxRequest('observer_id=' + this.state.user.id + '&token=' + this.state.user.token + '&' + fields_params + '&nr=' + this.state.formNumber, 'POST', global.app_url + 'observer/save_ref', function(r) {\r\n                        var res = JSON.parse(r);\r\n                        self.setState({\r\n                            openSnack: true,\r\n                            form_has_been_submitted: false,\r\n                            dialog_open: false\r\n                        })\r\n                        if (res.ok === false) {\r\n                            self.setState({\r\n                                server_response_message: res.errorLabel,\r\n                                snackTheme: 1\r\n                            })\r\n                        } else {\r\n                            localStorage.setItem('formular_referendum_' + self.state.formNumber + '_completat', 'da')\r\n                            //localStorage.setItem('user', JSON.stringify(res))\r\n                            self.setState({\r\n                                server_response_message: \"Datele au fost salvate.\",\r\n                                snackTheme: 2,\r\n                                //fields: {}\r\n                            }, function() {\r\n                                self.props.history.push('/homepage')\r\n                            })\r\n                        }\r\n                        //check for error messages and add condition\r\n                    })\r\n                }\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { history } = this.props;\r\n        var self = this\r\n        \r\n        return (\r\n            <div className='section_selector'>\r\n                <Header user={this.state.user} history={this.props.history} pagename={'P.V. REFERENDUM ÎNTREB #' + this.state.formNumber} />\r\n                <form className={classes.container} autoComplete=\"off\" onSubmit = { this.handleSubmit.bind(this) }>\r\n                        {form_fields.map((field, index) => {\r\n                            var final_field_name = 'ref' + this.state.formNumber + '_' + (index + 1);\r\n                            return(\r\n                                <Fade in={true} timeout={1000}>\r\n                                    <FormControl fullWidth className='form_control'>\r\n                                        <InputLabel htmlFor={final_field_name} className='form_control_label'><span className='mandatory_field'>{field.mandatory ? '*' : ''}</span>{(index + 1) + '. ' + field.label_text}</InputLabel>\r\n                                        <TextField\r\n                                            error={this.state.errors[final_field_name]}\r\n                                            className={classes.textField + \" \" + this.state.errors['classes'][final_field_name + '_error'] + ' custom_field' + \" \" + (this.state.focused_fields[final_field_name] == true ? ' expanded_input' : '')}\r\n                                            value={this.state.fields[final_field_name] || ''}\r\n                                            onChange={this.handleChange.bind(this, final_field_name)}\r\n                                            fullWidth\r\n                                            autoCapitalize='none'\r\n                                            type={field.field_type}\r\n                                            onFocus={this.onFocus.bind(this, final_field_name)}\r\n                                            onBlur={this.onBlur.bind(this, final_field_name)}\r\n                                        />\r\n                                    </FormControl>\r\n                                </Fade>\r\n                            )\r\n                        })}\r\n                        \r\n                        <Grid container spacing={0}>\r\n                            <Grid item xs={12} className='multiple_buttons'>\r\n                                <Button type='submit' className='custom_btn back_btn link_btn section_save_button' to=''>SALVEAZĂ</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                </form>\r\n                <p className='small_disclaimer'><strong>*)</strong> Numărul participanților trebuie să fie egal cu suma ce rezultă din adiționarea cifrelor de la pct. 5, 6 și 7.</p>\r\n                <Snackbar open = { this.state.openSnack }\r\n                        anchorOrigin = {\r\n                            {\r\n                                vertical: 'bottom',\r\n                                horizontal: 'left',\r\n                            }\r\n                        }\r\n                        maxSnack = { 2 }\r\n                        autoHideDuration = { 3000 }\r\n                        onClose = { this.snackbarClose.bind(this) }\r\n                        message = { <span className='server_response_message'> { this.state.server_response_message } </span>}\r\n                            ContentProps = {\r\n                                {\r\n                                    classes: {\r\n                                        root: this.state.snackTheme === 1 ? classes.snackError : classes.snackSuccess\r\n                                    }\r\n                                }\r\n                            }\r\n                />\r\n                <Dialog open={this.state.dialog_open}>\r\n                    <DialogTitle>Esti sigur ca vrei sa trimiti datele?</DialogTitle>\r\n                            <DialogActions>\r\n                                <Button onClick={this.handleCancelSave.bind(this)}>\r\n                                       NU\r\n                                </Button>\r\n                                <Button disabled={this.state.form_has_been_submitted} onClick={this.handleOkSave.bind(this)}>\r\n                                       DA\r\n                                </Button>\r\n                        </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nReferendumForm.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\nexport default withStyles(styles)(withRouter(ReferendumForm));"],"sourceRoot":""}